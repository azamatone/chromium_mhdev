From ee7092d7e77eeb2b18e4de06bafc93373f04d955 Mon Sep 17 00:00:00 2001
From: Elbek Rocky <elbek@rocky.local>
Date: Sun, 14 Jul 2024 00:14:32 -0400
Subject: [PATCH] force google safe search

---
 chrome/common/google_url_loader_throttle.cc | 18 ++++++++----------
 1 file changed, 8 insertions(+), 10 deletions(-)

diff --git a/chrome/common/google_url_loader_throttle.cc b/chrome/common/google_url_loader_throttle.cc
index 499595662d960..48d95ff821dd2 100644
--- a/chrome/common/google_url_loader_throttle.cc
+++ b/chrome/common/google_url_loader_throttle.cc
@@ -148,12 +148,11 @@ void GoogleURLLoaderThrottle::DetachFromCurrentSequence() {}
 void GoogleURLLoaderThrottle::WillStartRequest(
     network::ResourceRequest* request,
     bool* defer) {
-  if (dynamic_params_->force_safe_search) {
-    GURL new_url;
-    safe_search_api::ForceGoogleSafeSearch(request->url, &new_url);
-    if (!new_url.is_empty()) {
-      request->url = new_url;
-    }
+  // FORCE safe search
+  GURL new_url;
+  safe_search_api::ForceGoogleSafeSearch(request->url, &new_url);
+  if (!new_url.is_empty()) {
+    request->url = new_url;
   }
 
   static_assert(safe_search_api::YOUTUBE_RESTRICT_OFF == 0,
@@ -220,10 +219,9 @@ void GoogleURLLoaderThrottle::WillRedirectRequest(
   // URLLoaderThrottles can only change the redirect URL when the network
   // service is enabled. The non-network service path handles this in
   // ChromeNetworkDelegate.
-  if (dynamic_params_->force_safe_search) {
-    safe_search_api::ForceGoogleSafeSearch(redirect_info->new_url,
-                                           &redirect_info->new_url);
-  }
+  // FORCE safe search
+  safe_search_api::ForceGoogleSafeSearch(redirect_info->new_url,
+                                          &redirect_info->new_url);
 
   if (dynamic_params_->youtube_restrict >
           safe_search_api::YOUTUBE_RESTRICT_OFF &&
-- 
2.34.1

